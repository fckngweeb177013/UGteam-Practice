#include <iostream>
#define N 165000 // т.к. простое число с максимальным индексом 15000 равняется 163841
int main()
{
bool a[N]; // создаём массив для решета Эратосфена
int prime[15001]; // создаём массив простых чисел
for (int i = 0; i < 165000; i++) // заполняем решето изначально true элементами
a[i] = true;
a[0], a[1] = false; // т.к. рассматривать мы будем числа начиная с 2, то индексам 0 и 1 мы присваиваем значение false
for (int i = 2; i * i < N; i++) // изменяем на false значения элементов решета,
if (a[i]) // кратных i, начиная с i*i
for (int j = i * i; j < N; j += i)
a[j] = false;
int k = 1;
for (int i = 2; i < N; i++) // если элемент решета имеет значение true,
if (a[i]) { // то его индекс будет равен простому числу,
prime[k] = i; // которое мы записываем в массив prime
k++;
if (k == 15001)
break;
}
int n, x;
std::cin » n;
for (int i = 0; i < n; i++) {
std::cin » x; // получаем на вход индекс и
std::cout « prime[x] « std::endl; // выводим соответствующее ему простое число из массива
}
}